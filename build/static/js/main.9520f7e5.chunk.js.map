{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","services/phoneService.js","components/NotificationMessage.js","App.js","index.js"],"names":["Filter","type","value","eventHandler","onChange","Persons","searchedPersons","searchTerm","deleteHandler","regex","RegExp","filter","person","test","name","map","number","onClick","event","PersonForm","submitEventHandler","nameEventHandler","numberEventHandler","onSubmit","baseUrl","phoneService","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","remove","objectToBeDeleted","window","confirm","delete","NotificationMessage","message","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newSearchTerm","setNewSearchTerm","notificationMessage","setNotificationMessage","notificationType","setNotificationType","useEffect","allContacts","target","preventDefault","nameObject","firstElementIndex","findIndex","element","updatedContact","setTimeout","catch","error","newContact","concat","request","undefined","ReactDOM","render","document","getElementById"],"mappings":"6KAUeA,EARA,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,aAC1B,OACE,qDACoB,uBAAOF,KAAMA,EAAMC,MAAOA,EAAOE,SAAUD,QCqBtDE,EAxBC,SAAC,GAAkD,IAAjDC,EAAgD,EAAhDA,gBAAiBC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,cACrCC,EAAQ,IAAIC,OAAOH,EAAY,KACrC,OACI,8BACKD,EACIK,QAAO,SAAAC,GACJ,MAAmB,KAAfL,IAEmC,IAA5BE,EAAMI,KAAKD,EAAOE,MADlBF,EAIA,QAGdG,KAAI,SAAAH,GAAM,OACP,gCACKA,EAAOE,KADZ,IACmBF,EAAOI,OACtB,wBAAQC,QAAS,SAACC,GAAD,OAASV,EAAcU,EAAON,IAA/C,sBAFMA,EAAOE,YCCtBK,EAhBI,SAAC,GAA8E,IAA7EC,EAA4E,EAA5EA,mBAAoBN,EAAwD,EAAxDA,KAAME,EAAkD,EAAlDA,OAAQK,EAA0C,EAA1CA,iBAAkBC,EAAwB,EAAxBA,mBACrE,OACE,uBAAMC,SAAUH,EAAhB,UACI,yCACQ,uBAAOlB,MAAOY,EAAMV,SAAUiB,OAEtC,2CACU,uBAAOnB,MAAOc,EAAQZ,SAAUkB,OAE1C,8BACE,wBAAQrB,KAAK,SAAb,uB,gBCXNuB,EAAU,eAiCDC,EADM,CAAEC,OA9BR,WAEX,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAChB,OAAOA,EAASC,SA2BOC,OAvBhB,SAAAC,GAEX,OADgBN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAAAC,GAChB,OAAOA,EAASC,SAoBeI,OAhBxB,SAACC,EAAIH,GAEhB,OADgBN,IAAMU,IAAN,UAAab,EAAb,YAAwBY,GAAMH,GAC/BJ,MAAK,SAAAC,GAChB,OAAOA,EAASC,SAauBO,OAThC,SAACC,GACZ,IAA6D,IAAzDC,OAAOC,QAAP,iBAAyBF,EAAkBzB,KAA3C,OAEA,OADgBa,IAAMe,OAAN,UAAgBlB,EAAhB,YAA2Be,EAAkBH,KAC9CP,MAAK,SAAAC,GAChB,OAAOA,EAASC,UCFbY,EAxBa,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,QAAS3C,EAAU,EAAVA,KACnC,OAAe,MAAX2C,EACO,KAGE,iBAAT3C,EAEI,qBAAK4C,UAAU,eAAf,SACKD,IAIK,UAAT3C,EAED,qBAAK4C,UAAU,QAAf,SACKD,IAKF,MCwGAE,EAvHH,WAEV,MAAgCC,mBAAS,IAAzC,mBAAQC,EAAR,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAQG,EAAR,KAAiBC,EAAjB,KACA,EAAoCJ,mBAAS,IAA7C,mBAAQK,EAAR,KAAmBC,EAAnB,KACA,EAA4CN,mBAAS,IAArD,mBAAQO,EAAR,KAAuBC,EAAvB,KACA,EAAwDR,mBAAS,MAAjE,mBAAQS,EAAR,KAA6BC,EAA7B,KACA,EAAkDV,mBAAS,IAA3D,mBAAQW,EAAR,KAA0BC,EAA1B,KAGAC,qBAAU,WACRnC,EACGC,SACAG,MAAK,SAAAgC,GACJZ,EAAWY,QAEd,IA0FH,OACE,gCACE,2CACA,cAAC,EAAD,CAAqBjB,QAASY,EAAqBvD,KAAMyD,IACzD,cAAC,EAAD,CAAQzD,KAAM,OAAQC,MAAOoD,EAAenD,aA3BjB,SAACe,GAC9BqC,EAAiBrC,EAAM4C,OAAO5D,UA2B5B,2CACA,cAAC,EAAD,CAAYkB,mBA9FG,SAACF,GAClBA,EAAM6C,iBACN,IAAMC,EAAa,CACjBlD,KAAMoC,EACNlC,OAAQoC,GAGJa,EAAoBjB,EAAQkB,WAAW,SAAAC,GAAO,OAAIA,EAAQrD,OAASoC,MAE9C,IAAvBe,EACEzB,OAAOC,QAAP,UAAkBS,EAAlB,4EACFzB,EACGU,OAAOa,EAAQiB,GAAmB7B,GAAI4B,GACtCnC,MAAK,SAAAuC,GACJnB,EAAWD,EAAQjC,KAAI,SAAAH,GAAM,OAAIA,EAAOwB,KAAOY,EAAQiB,GAAmB7B,GAAKxB,EAASwD,MACxFX,EAAuB,WAAD,OACTO,EAAWlD,KADF,cAGtB6C,EAAoB,gBACpBU,YAAW,WACTZ,EAAuB,MACvBE,EAAoB,MACnB,QAEJW,OAAM,SAAAC,GACLd,EAAuB,kBAAD,OACFO,EAAWlD,KADT,8CAGtB6C,EAAoB,SACpBU,YAAW,WACTZ,EAAuB,MACvBE,EAAoB,MACnB,KACHV,EAAWD,EAAQrC,QAAO,SAAAC,GAAM,OAAIA,EAAOwB,KAAOY,EAAQiB,GAAmB7B,WAKnFX,EACGO,OAAOgC,GACPnC,MAAK,SAAA2C,GACJvB,EAAWD,EAAQyB,OAAOD,OAE9Bf,EAAuB,SAAD,OACXO,EAAWlD,OAEtB6C,EAAoB,gBACpBU,YAAW,WACTZ,EAAuB,MACvBE,EAAoB,MACnB,MAGLR,EAAW,IACXE,EAAa,KAwCiCvC,KAAMoC,EAASlC,OAAQoC,EAAW/B,iBArCzD,SAACH,GACxBiC,EAAWjC,EAAM4C,OAAO5D,QAoC4FoB,mBAjC3F,SAACJ,GAC1BmC,EAAanC,EAAM4C,OAAO5D,UAiCxB,yCACA,cAAC,EAAD,CAASI,gBAAiB0C,EAASzC,WAAY+C,EAAe9C,cA3B5C,SAACU,EAAOqB,GAC5BrB,EAAM6C,iBACN,IAAMW,EAAUjD,EAAaa,OAAOC,QAEpBoC,IAAZD,IACFA,EAAQ7C,MAAK,WACXoB,EAAWD,EAAQrC,QAAO,SAAAC,GAAM,OAAIA,EAAOwB,KAAOG,EAAkBH,UAEtEqB,EAAuB,WAAD,OACTlB,EAAkBzB,OAE/B6C,EAAoB,gBACpBU,YAAW,WACTZ,EAAuB,MACvBE,EAAoB,MACnB,a,MCxGTiB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.9520f7e5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({type, value, eventHandler}) => {\r\n    return (\r\n      <div>\r\n        filter shown with <input type={type} value={value} onChange={eventHandler} />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Persons = ({searchedPersons, searchTerm, deleteHandler}) => {\r\n    const regex = new RegExp(searchTerm, 'i')\r\n    return (\r\n        <div>\r\n            {searchedPersons\r\n                .filter(person => {\r\n                    if (searchTerm === '') {\r\n                        return person;\r\n                    } else if (regex.test(person.name) === true) {\r\n                        return person\r\n                    } else{\r\n                        return null\r\n                    }\r\n                })\r\n                .map(person => \r\n                    <div key={person.name}>\r\n                        {person.name} {person.number}\r\n                        <button onClick={(event)=>deleteHandler(event, person)}>delete</button>\r\n                    </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = ({submitEventHandler, name, number, nameEventHandler, numberEventHandler}) => {\r\n    return (\r\n      <form onSubmit={submitEventHandler}>\r\n          <div>\r\n            name: <input value={name} onChange={nameEventHandler} />\r\n          </div>\r\n          <div>\r\n            number: <input value={number} onChange={numberEventHandler} />\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">add</button>\r\n          </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => {\r\n        return response.data\r\n    })\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => {\r\n        return response.data\r\n    })\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => {\r\n        return response.data\r\n    })\r\n}\r\n\r\nconst remove = (objectToBeDeleted) => {\r\n    if (window.confirm(`Delete ${objectToBeDeleted.name} ?`) === true) {\r\n        const request = axios.delete(`${baseUrl}/${objectToBeDeleted.id}`)\r\n        return request.then(response => {\r\n            return response.data\r\n        })\r\n    }\r\n}\r\n\r\nconst phoneService = { getAll, create, update, remove }\r\nexport default phoneService\r\n","import React from 'react'\r\n\r\nconst NotificationMessage = ({message, type}) => {\r\n    if (message == null) {\r\n        return null\r\n    }\r\n\r\n    if (type === 'notification') {\r\n        return (\r\n            <div className=\"notification\">\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n    else if (type === 'error') {\r\n        return (\r\n            <div className=\"error\">\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport default NotificationMessage","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport phoneService from './services/phoneService'\nimport NotificationMessage from './components/NotificationMessage'\n\nconst App = () => {\n  \n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearchTerm, setNewSearchTerm ] = useState('')\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\n  const [ notificationType, setNotificationType ] = useState('')\n\n  // useEffect for mocking the fetching of data from json-server\n  useEffect(() => {\n    phoneService\n      .getAll()\n      .then(allContacts => {\n        setPersons(allContacts)  \n      })\n  }, [])\n\n  const addContact = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    const firstElementIndex = persons.findIndex( element => element.name === newName )\n\n    if (firstElementIndex !== -1) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        phoneService\n          .update(persons[firstElementIndex].id, nameObject)\n          .then(updatedContact => {\n            setPersons(persons.map(person => person.id !== persons[firstElementIndex].id ? person : updatedContact))\n            setNotificationMessage(\n              `Changed ${nameObject.name}'s number`\n            )\n            setNotificationType('notification')\n            setTimeout(() => {\n              setNotificationMessage(null)\n              setNotificationType('')\n            }, 5000) \n          })\n          .catch(error => {\n            setNotificationMessage(\n              `Information of ${nameObject.name} has already been removed from the server`\n            )\n            setNotificationType('error')\n            setTimeout(() => {\n              setNotificationMessage(null)\n              setNotificationType('')\n            }, 5000)\n            setPersons(persons.filter(person => person.id !== persons[firstElementIndex].id))\n          })\n      }\n    }\n    else {\n      phoneService\n        .create(nameObject)\n        .then(newContact => {\n          setPersons(persons.concat(newContact))\n        })\n      setNotificationMessage(\n        `Added ${nameObject.name}`\n      )\n      setNotificationType('notification')\n      setTimeout(() => {\n        setNotificationMessage(null)\n        setNotificationType('')\n      }, 5000)  \n    }\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchTermChange = (event) => {\n    setNewSearchTerm(event.target.value)\n  }\n\n  const deleteContact = (event, objectToBeDeleted) => {\n    event.preventDefault()\n    const request = phoneService.remove(objectToBeDeleted)\n    \n    if (request !== undefined) {\n      request.then(() => {\n        setPersons(persons.filter(person => person.id !== objectToBeDeleted.id))\n      })\n      setNotificationMessage(\n        `Removed ${objectToBeDeleted.name}`\n      )\n      setNotificationType('notification')\n      setTimeout(() => {\n        setNotificationMessage(null)\n        setNotificationType('')\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <NotificationMessage message={notificationMessage} type={notificationType} />\n      <Filter type={'text'} value={newSearchTerm} eventHandler={handleSearchTermChange} />\n      <h2>add a new</h2>\n      <PersonForm submitEventHandler={addContact} name={newName} number={newNumber} nameEventHandler={handleNameChange} numberEventHandler={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons searchedPersons={persons} searchTerm={newSearchTerm} deleteHandler={deleteContact} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}